{"ast":null,"code":"var _jsxFileName = \"/Users/luiseduardorodriguezgarcia/Desktop/reactjs/market/src/Components/PokemonContainer.jsx\";\nimport React, { useState } from 'react';\nimport { getPokemons, getPokemons2 } from '../Apis/consumiendoApi';\nimport PokemonList from './PokemonList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [pokemons, setPokemons] = useState([]);\n\nfunction PokemonContainer() {\n  const obtenerPokemos = () => {\n    getPokemons().then(resultado => {\n      return resultado.json();\n    }).then(pokemons => {\n      console.log(pokemons.resultado);\n      setPokemons(pokemons.resultado);\n    });\n  };\n\n  const obtenerPokemosConIMG = () => {\n    let array = [];\n\n    for (let i; i => 20; i++) {\n      getPokemons2(i).then(resultado => {\n        return resultado;\n      }).then(pokemon => {\n        array.push(pokemon);\n        setPokemons([...array]);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: obtenerPokemosConIMG,\n      children: \"Ver Pokemons\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(PokemonList, {\n      lista: pokemons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_c = PokemonContainer;\nexport default PokemonContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonContainer\");","map":{"version":3,"sources":["/Users/luiseduardorodriguezgarcia/Desktop/reactjs/market/src/Components/PokemonContainer.jsx"],"names":["React","useState","getPokemons","getPokemons2","PokemonList","pokemons","setPokemons","PokemonContainer","obtenerPokemos","then","resultado","json","console","log","obtenerPokemosConIMG","array","i","pokemon","push"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,wBAA1C;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAM,CAACC,QAAD,EAAUC,WAAV,IAAuBL,QAAQ,CAAC,EAAD,CAArC;;AAEA,SAASM,gBAAT,GAA4B;AACxB,QAAMC,cAAc,GAAG,MAAI;AACvBN,IAAAA,WAAW,GACVO,IADD,CACOC,SAAD,IAAa;AACf,aAAOA,SAAS,CAACC,IAAV,EAAP;AACH,KAHD,EAICF,IAJD,CAIOJ,QAAD,IAAY;AACdO,MAAAA,OAAO,CAACC,GAAR,CAAYR,QAAQ,CAACK,SAArB;AACAJ,MAAAA,WAAW,CAACD,QAAQ,CAACK,SAAV,CAAX;AAEH,KARD;AASH,GAVD;;AAYA,QAAMI,oBAAoB,GAAC,MAAI;AAC3B,QAAIC,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAIC,CAAT,EAAYA,CAAC,IAAI,EAAjB,EAAqBA,CAAC,EAAtB,EAA0B;AACtBb,MAAAA,YAAY,CAACa,CAAD,CAAZ,CACCP,IADD,CACOC,SAAD,IAAa;AAEf,eAAOA,SAAP;AAEH,OALD,EAKGD,IALH,CAKSQ,OAAD,IAAW;AACfF,QAAAA,KAAK,CAACG,IAAN,CAAWD,OAAX;AACAX,QAAAA,WAAW,CAAC,CAAC,GAAGS,KAAJ,CAAD,CAAX;AAEH,OATD;AAWH;AAIJ,GAlBD;;AAmBF,sBACE;AAAA,4BAEA;AAAQ,MAAA,OAAO,EAAED,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA,QAAC,WAAD;AAAc,MAAA,KAAK,EAAET;AAArB;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;KAzCQE,gB;AA2CT,eAAeA,gBAAf","sourcesContent":["import React, { useState } from 'react'\nimport { getPokemons, getPokemons2 } from '../Apis/consumiendoApi'\nimport PokemonList from './PokemonList'\n\nconst [pokemons,setPokemons]=useState([])\n\nfunction PokemonContainer() {\n    const obtenerPokemos = ()=>{\n        getPokemons()\n        .then((resultado)=>{\n            return resultado.json()\n        })\n        .then((pokemons)=>{\n            console.log(pokemons.resultado)\n            setPokemons(pokemons.resultado)\n\n        })\n    }\n\n    const obtenerPokemosConIMG=()=>{\n        let array = []\n        for (let i; i => 20; i++) {\n            getPokemons2(i)\n            .then((resultado)=>{\n\n                return resultado\n\n            }).then((pokemon)=>{\n                array.push(pokemon)\n                setPokemons([...array])\n\n            })\n            \n        }\n\n\n\n    }\n  return (\n    <div>\n        \n    <button onClick={obtenerPokemosConIMG}>Ver Pokemons</button>\n    <PokemonList  lista={pokemons}/>\n\n\n    </div>\n  )\n}\n\nexport default PokemonContainer"]},"metadata":{},"sourceType":"module"}